---
alwaysApply: false
---
# deco CMS — Open Source Admin for Internal AI Apps

This repository powers the deco CMS admin experience: an open-source MCP manager for internal AI applications. Teams vibecode their apps across **Sites**, **Tools**, **Agents**, **Databases**, and **Workflows**, and the platform assembles a beautiful admin with navigation, permissions, and deployment hooks. Every installed app surfaces MCP tools as menu buttons, and you can always chat with those tools through the AI shell. Own your software — host it yourself, bring your models and data, and keep your workspace private.

## Repository Structure

This project is a modern web application built with cutting-edge technologies and follows a monorepo architecture powered by Bun workspaces.

## Technology Stack

- **React 19**: UI for the decocms admin shell and marketplace
- **Tailwind CSS v4**: Utility styling for responsive dashboards
- **Bun**: Dependency management, task runner, and TypeScript tooling
- **Vite**: Development server and build pipeline for the web app
- **shadcn/ui**: Shared design system components in `packages/ui`
 
## File Tree

```
.
├── README.md
├── apps
│   └── web
│       ├── index.css
│       ├── index.html
│       ├── package.json
│       ├── public
│       ├── src
│       └── vite.config.ts
├── bun.lockb
├── package.json
└── packages
    ├── sdk
    │   ├── package.json
    │   └── src
    └── ui
        ├── components.json
        ├── package.json
        ├── src
        └── tsconfig.json

11 directories, 12 files
```

## Folders

- `/apps/web` → decocms admin web app (React + Vite)
- `/packages/sdk` → Shared SDK for data access, MCP integrations, and runtime helpers
- `/packages/ui` → Reusable design system components (shadcn/ui based)

## Product Concepts

- **Sites**: Bundle pages, layouts, and brand for internal and external interfaces
- **Tools**: Atomic capabilities exposed via MCP apps; reusable across agents and workflows
- **Agents**: Combine a model, specialized prompt, and curated toolset to solve focused problems and power conversational experiences
- **Databases**: Define models that power admin tables and forms
- **Workflows**: Orchestrate tools, agents, and databases into automated processes
- **Apps (MCP Integrations)**: Bring external capabilities into the workspace; each app provides tools via MCP
- **Marketplace**: Install curated MCP apps into your project with one click, ready to appear in the admin menu

Your admin menu is generated from these vibecoded assets so you can ship AI-native internal software quickly, with full control.

## Development Workflow

The project leverages Bun for various development tasks:

- Dependency management (`bun install`)
- Code formatting (`bun run fmt`)
- Type checking (`bun run check`)
- Running scripts (`bun run <script-name>`)
- Package management (`bun add`, `bun remove`)

## Local Development Checklist

1. Install dependencies: `bun install`
2. Start the web app: `bun dev`
3. Run type checking: `bun run check`
4. Run formatting: `bun run fmt`
5. Run linting: `bun run lint`

> Tip: run steps 3–5 before opening pull requests to keep CI green.